version: '3.8'

services:
  # MySQL Database
  database:
    image: mysql:8.0
    container_name: car-selling-db
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: car_selling_dev
      MYSQL_USER: car_user
      MYSQL_PASSWORD: car_password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - car-selling-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis (Optional - for caching)
  redis:
    image: redis:7-alpine
    container_name: car-selling-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - car-selling-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Spring Boot Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: car-selling-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - DATABASE_URL=jdbc:mysql://database:3306/car_selling_dev?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      - DB_USERNAME=car_user
      - DB_PASSWORD=car_password
      - JWT_SECRET=mySecretKey12345678901234567890123456789012345678901234567890
      - JWT_ACCESS_EXPIRATION=900000
      - JWT_REFRESH_EXPIRATION=604800000
      - UPLOAD_PATH=/app/uploads
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - car-selling-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  car-selling-network:
    driver: bridge
