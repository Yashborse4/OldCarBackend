spring.application.name=Sell-the-old-Car
server.port=9000
server.address=0.0.0.0
# ===============================================
# DATABASE CONFIGURATION
# ===============================================
# WARNING: DO NOT use hardcoded database credentials in production!
# Set these as environment variables: DB_URL, DB_USERNAME, DB_PASSWORD
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/carselling}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:12345}
spring.datasource.driver-class-name=org.postgresql.Driver

# ===============================================
# JPA & HIBERNATE CONFIGURATION
# ===============================================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
# Explicit dialect is not needed and has been removed as per recommendation.
spring.jpa.open-in-view=false

# ===============================================
# JWT SECURITY CONFIGURATION
# ===============================================
# WARNING: DO NOT use hardcoded secrets in production!
# Set these as environment variables: JWT_SECRET, JWT_EXPIRATION_MS, JWT_REFRESH_EXPIRATION_MS
app.jwt.secret=${JWT_SECRET:ce33afceccb6e0e7b4ae7029ed4f5d9cad4c33af1fdf7696d6c7931c8b0b156eefb4de1dbd17c580f4e5e3196644ee98cbab03cfaf93df9a9aac549f8727551557f665fb4a026f0616bcef4db504163b047a6c04f3ee2a397499fd8493051675aec30de24c5e3171ff4bc424d959293b4961a9eac99d82168970e7667980ae10ae717dc45cb6ecf3abaf930f4f7abd1ee5722a3c3087ac66f552cf71c1de0ab81f978499095383f1c3a84be7fabf5206f96befb3f90b20c7525faef2fd8d048b19ed13db29a5cd429bc9b98722fb29f8f1a4458906365f40583360406c4622beba6274bb19f9df41e0662852039c1ca3221efebdc661ff934b46db4822bbd08b}
app.jwt.expiration-ms=${JWT_EXPIRATION_MS:86400000}
app.jwt.refresh-token-expiration-ms=${JWT_REFRESH_EXPIRATION_MS:604800000}

# ===============================================
# LOGGING CONFIGURATION
# ===============================================
# Suppress benign security warning for custom AuthenticationProvider
logging.level.org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer=ERROR
# Set more detailed logging for security and application packages
logging.level.org.springframework.security=DEBUG
logging.level.com.CarSelling.Sell.the.old.Car=TRACE

# ===============================================
# DATABASE-BACKED MESSAGE BROKER (PostgreSQL only)
# ===============================================
# Using PostgreSQL for all chat data persistence

# ===============================================
# WEBSOCKET CONFIGURATION
# ===============================================
# WebSocket connection settings
spring.websocket.allowedOrigins=${WEBSOCKET_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:8080}
spring.websocket.broker.host=${WEBSOCKET_BROKER_HOST:localhost}
spring.websocket.broker.port=${WEBSOCKET_BROKER_PORT:61613}

# Chat system settings
app.chat.max-message-length=1000
app.chat.max-messages-per-minute=30
app.chat.typing-timeout=10000
app.chat.online-timeout=300000

# ===============================================
# ACTUATOR CONFIGURATION
# ===============================================
management.endpoints.web.exposure.include=health,info,metrics


logging.level.root=INFO
logging.level.com.myapp=DEBUG
debug=true
